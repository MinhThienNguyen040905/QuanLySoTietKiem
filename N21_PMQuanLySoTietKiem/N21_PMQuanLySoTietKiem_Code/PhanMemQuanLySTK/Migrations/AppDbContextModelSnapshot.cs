// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PhanMemQuanLySTK.Data;

#nullable disable

namespace PhanMemQuanLySTK.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PhanMemQuanLySTK.Models.Group_Details", b =>
                {
                    b.Property<string>("Username")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("Saving_ID")
                        .HasColumnType("int");

                    b.Property<bool>("Is_Owner")
                        .HasColumnType("bit");

                    b.Property<long>("Total_Money")
                        .HasColumnType("bigint");

                    b.HasKey("Username", "Saving_ID");

                    b.HasIndex("Saving_ID");

                    b.ToTable("Group_Details");
                });

            modelBuilder.Entity("PhanMemQuanLySTK.Models.Group_Notifications", b =>
                {
                    b.Property<int>("Group_Notification_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Group_Notification_ID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("Money")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Notification_Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Saving_ID")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username_Sender")
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Group_Notification_ID");

                    b.HasIndex("Saving_ID");

                    b.HasIndex("Username_Sender");

                    b.ToTable("Group_Notifications");
                });

            modelBuilder.Entity("PhanMemQuanLySTK.Models.Group_Notifications_Details", b =>
                {
                    b.Property<string>("Username")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("Group_Notification_ID")
                        .HasColumnType("int");

                    b.Property<bool>("Is_Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Username", "Group_Notification_ID");

                    b.HasIndex("Group_Notification_ID");

                    b.ToTable("Group_Notifications_Details");
                });

            modelBuilder.Entity("PhanMemQuanLySTK.Models.Group_Savings_Accounts", b =>
                {
                    b.Property<int>("Saving_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Saving_ID"));

                    b.Property<DateTime>("Creating_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Interest_Rate_ID")
                        .HasColumnType("int");

                    b.Property<long>("Money")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("Target")
                        .HasColumnType("bigint");

                    b.HasKey("Saving_ID");

                    b.HasIndex("Interest_Rate_ID");

                    b.ToTable("Group_Savings_Accounts");
                });

            modelBuilder.Entity("PhanMemQuanLySTK.Models.Group_Transactions_Information", b =>
                {
                    b.Property<int>("Transaction_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Transaction_ID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Money")
                        .HasColumnType("bigint");

                    b.Property<int>("Saving_ID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Transaction_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Username")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Transaction_ID");

                    b.HasIndex("Saving_ID");

                    b.HasIndex("Username");

                    b.ToTable("Group_Transactions_Information");
                });

            modelBuilder.Entity("PhanMemQuanLySTK.Models.Interest_Rates", b =>
                {
                    b.Property<int>("Interest_Rate_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Interest_Rate_ID"));

                    b.Property<double>("Rate")
                        .HasColumnType("float");

                    b.Property<int>("Term")
                        .HasColumnType("int");

                    b.HasKey("Interest_Rate_ID");

                    b.ToTable("Interest_Rates");
                });

            modelBuilder.Entity("PhanMemQuanLySTK.Models.Personal_Notifications", b =>
                {
                    b.Property<int>("Personal_Notification_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Personal_Notification_ID"));

                    b.Property<bool>("Is_Deleted")
                        .HasColumnType("bit");

                    b.Property<bool>("Is_Read")
                        .HasColumnType("bit");

                    b.Property<long>("Money_Rate")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Notification_Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Saving_ID")
                        .HasColumnType("int");

                    b.HasKey("Personal_Notification_ID");

                    b.HasIndex("Saving_ID");

                    b.ToTable("Personal_Notifications");
                });

            modelBuilder.Entity("PhanMemQuanLySTK.Models.Personal_Savings_Accounts", b =>
                {
                    b.Property<int>("Saving_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Saving_ID"));

                    b.Property<DateTime>("Creating_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Interest_Rate_ID")
                        .HasColumnType("int");

                    b.Property<long>("Money")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("Target")
                        .HasColumnType("bigint");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Saving_ID");

                    b.HasIndex("Interest_Rate_ID");

                    b.HasIndex("Username");

                    b.ToTable("Personal_Savings_Accounts");
                });

            modelBuilder.Entity("PhanMemQuanLySTK.Models.Personal_Transactions_Information", b =>
                {
                    b.Property<int>("Transaction_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Transaction_ID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Money")
                        .HasColumnType("bigint");

                    b.Property<int>("Saving_ID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Transaction_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("Transaction_ID");

                    b.HasIndex("Saving_ID");

                    b.ToTable("Personal_Transactions_Information");
                });

            modelBuilder.Entity("PhanMemQuanLySTK.Models.Users", b =>
                {
                    b.Property<string>("Username")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Avatar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Dob")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fullname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Identity_Card")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Money")
                        .HasColumnType("bigint");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Username");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("PhanMemQuanLySTK.Models.Group_Details", b =>
                {
                    b.HasOne("PhanMemQuanLySTK.Models.Group_Savings_Accounts", "Group_Savings_Accounts")
                        .WithMany("Group_Details")
                        .HasForeignKey("Saving_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PhanMemQuanLySTK.Models.Users", "User")
                        .WithMany("Group_Details")
                        .HasForeignKey("Username")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Group_Savings_Accounts");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PhanMemQuanLySTK.Models.Group_Notifications", b =>
                {
                    b.HasOne("PhanMemQuanLySTK.Models.Group_Savings_Accounts", "Group_Savings_Accounts")
                        .WithMany("Group_Notifications")
                        .HasForeignKey("Saving_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PhanMemQuanLySTK.Models.Users", "User_Sender")
                        .WithMany("Group_Notifications")
                        .HasForeignKey("Username_Sender")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Group_Savings_Accounts");

                    b.Navigation("User_Sender");
                });

            modelBuilder.Entity("PhanMemQuanLySTK.Models.Group_Notifications_Details", b =>
                {
                    b.HasOne("PhanMemQuanLySTK.Models.Group_Notifications", "Group_Notifications")
                        .WithMany("Group_Notifications_Details")
                        .HasForeignKey("Group_Notification_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PhanMemQuanLySTK.Models.Users", "User")
                        .WithMany("Group_Notifications_Details")
                        .HasForeignKey("Username")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group_Notifications");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PhanMemQuanLySTK.Models.Group_Savings_Accounts", b =>
                {
                    b.HasOne("PhanMemQuanLySTK.Models.Interest_Rates", "Interest_Rates")
                        .WithMany("Group_Savings_Accounts")
                        .HasForeignKey("Interest_Rate_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Interest_Rates");
                });

            modelBuilder.Entity("PhanMemQuanLySTK.Models.Group_Transactions_Information", b =>
                {
                    b.HasOne("PhanMemQuanLySTK.Models.Group_Savings_Accounts", "Group_Savings_Accounts")
                        .WithMany("Group_Transactions_Information")
                        .HasForeignKey("Saving_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PhanMemQuanLySTK.Models.Users", "User")
                        .WithMany("Group_Transactions_Information")
                        .HasForeignKey("Username")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Group_Savings_Accounts");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PhanMemQuanLySTK.Models.Personal_Notifications", b =>
                {
                    b.HasOne("PhanMemQuanLySTK.Models.Personal_Savings_Accounts", "Personal_Savings_Account")
                        .WithMany("Personal_Notifications")
                        .HasForeignKey("Saving_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Personal_Savings_Account");
                });

            modelBuilder.Entity("PhanMemQuanLySTK.Models.Personal_Savings_Accounts", b =>
                {
                    b.HasOne("PhanMemQuanLySTK.Models.Interest_Rates", "Interest_Rate")
                        .WithMany("Personal_Savings_Accounts")
                        .HasForeignKey("Interest_Rate_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PhanMemQuanLySTK.Models.Users", "User")
                        .WithMany("Personal_Savings_Accounts")
                        .HasForeignKey("Username")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Interest_Rate");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PhanMemQuanLySTK.Models.Personal_Transactions_Information", b =>
                {
                    b.HasOne("PhanMemQuanLySTK.Models.Personal_Savings_Accounts", "Personal_Savings_Accounts")
                        .WithMany("Personal_Transactions_Information")
                        .HasForeignKey("Saving_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Personal_Savings_Accounts");
                });

            modelBuilder.Entity("PhanMemQuanLySTK.Models.Group_Notifications", b =>
                {
                    b.Navigation("Group_Notifications_Details");
                });

            modelBuilder.Entity("PhanMemQuanLySTK.Models.Group_Savings_Accounts", b =>
                {
                    b.Navigation("Group_Details");

                    b.Navigation("Group_Notifications");

                    b.Navigation("Group_Transactions_Information");
                });

            modelBuilder.Entity("PhanMemQuanLySTK.Models.Interest_Rates", b =>
                {
                    b.Navigation("Group_Savings_Accounts");

                    b.Navigation("Personal_Savings_Accounts");
                });

            modelBuilder.Entity("PhanMemQuanLySTK.Models.Personal_Savings_Accounts", b =>
                {
                    b.Navigation("Personal_Notifications");

                    b.Navigation("Personal_Transactions_Information");
                });

            modelBuilder.Entity("PhanMemQuanLySTK.Models.Users", b =>
                {
                    b.Navigation("Group_Details");

                    b.Navigation("Group_Notifications");

                    b.Navigation("Group_Notifications_Details");

                    b.Navigation("Group_Transactions_Information");

                    b.Navigation("Personal_Savings_Accounts");
                });
#pragma warning restore 612, 618
        }
    }
}
